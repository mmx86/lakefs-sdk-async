name: Generate async lakefs SDK

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (lakefs must have corresponding tag)'
        required: true
        default: '1.0.0'
        type: string

jobs:
  generate-async-lakefs-sdk:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Version: $VERSION"
      - run: |
          ls -lha $GITHUB_WORKSPACE
          ls -lha $GITHUB_WORKSPACE/lakefs || true
          ls -lha $GITHUB_WORKSPACE/lakefs-sdk-async || true
      - uses: actions/checkout@v4
      - run: |
          ls -lha $GITHUB_WORKSPACE
          ls -lha $GITHUB_WORKSPACE/lakefs || true
          ls -lha $GITHUB_WORKSPACE/lakefs-sdk-async || true
      - uses: actions/checkout@v4
        with:
          repository: treeverse/lakefs
      - run: |
          ls -lha $GITHUB_WORKSPACE
          ls -lha $GITHUB_WORKSPACE/lakefs || true
          ls -lha $GITHUB_WORKSPACE/lakefs-sdk-async || true
        env:
          VERSION: ${{ inputs.version }}
#jobs:
#  log-the-inputs:
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          echo "Log level: $LEVEL"
#          echo "Tags: $TAGS"
#          echo "Environment: $ENVIRONMENT"
#        env:
#          LEVEL: ${{ inputs.logLevel }}
#          TAGS: ${{ inputs.tags }}
#          ENVIRONMENT: ${{ inputs.environment }}

#jobs:
#  setup-matrix:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Setup matrix combinations
#        id: setup-matrix-combinations
#        run: |
#          MATRIX_PARAMS_COMBINATIONS='
#              {"foo": "foo-1", "bar": "bar-1"},
#              {"foo": "foo-1", "bar": "bar-2"},
#              {"foo": "foo-2", "bar": "bar-1"},
#          '
#          echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
#    outputs:
#      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}
#  matrix-job:
#    runs-on: ubuntu-latest
#    needs: setup-matrix
#    strategy:
#      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
#    steps:
#      - run: |
#          echo foo=${{ matrix.foo }}
#          echo bar=${{ matrix.bar }}
#
