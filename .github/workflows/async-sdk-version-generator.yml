name: Generate async lakefs SDK for specific version.

on:
  workflow_dispatch:
    inputs:
      version:
        default: '1.0.0'
        description: 'Version (lakefs must have corresponding tag)'
        required: true
        type: string

jobs:
  generate-async-lakefs-sdk:
    env:
      VERSION: ${{ github.event.inputs.version }}
      TAG: "v${{ github.event.inputs.version }}"
    runs-on: ubuntu-latest
    steps:
      - name: Print env
        run: |
          echo "Version: $VERSION"
          echo "Tag: $TAG"
      - name: Checkout lakefs-sdk-async
        uses: actions/checkout@v4
        with:
          path: lakefs-sdk-async
      - name: Checkout lakefs
        uses: actions/checkout@v4
        with:
          repository: treeverse/lakeFS
          path: lakefs
          ref: ${{ env.TAG }}
      - name: Ok check
        run: |
          ls -lha $GITHUB_WORKSPACE
          ls -lha $GITHUB_WORKSPACE/lakefs
          ls -lha $GITHUB_WORKSPACE/lakefs-sdk-async
      - name: Patch openapi generator config (use asyncio)
        run: |
          echo -e "library: asyncio\n" >> $GITHUB_WORKSPACE/lakefs/clients/python/python-codegen-config.yaml
          cat $GITHUB_WORKSPACE/lakefs/clients/python/python-codegen-config.yaml
      - name: Patch makefile (package name and output dir)
        run: |
          sed -i "s/--package-name lakefs_sdk/--package-name lakefs_sdk_async/g" $GITHUB_WORKSPACE/lakefs/Makefile
      - name: Generate
        run: |
          rm -rf $GITHUB_WORKSPACE/lakefs-sdk-async/lakefs-sdk-async 
          make -C $GITHUB_WORKSPACE/lakefs sdk-python
          cp -r $GITHUB_WORKSPACE/lakefs/clients/python $GITHUB_WORKSPACE/lakefs-sdk-async/lakefs-sdk-async
      - name: Ok check
        run: |
          ls -lha $GITHUB_WORKSPACE/lakefs-sdk-async
          ls -lha $GITHUB_WORKSPACE/lakefs-sdk-async/lakefs-sdk-async
      - name: New commit
        run: |
          shopt -s expand_aliases
          alias gitcd='git -C $GITHUB_WORKSPACE/lakefs-sdk-async'
          gitcd config --global user.name 'github-actions'
          gitcd config --global user.email 'github-actions@github.com'
          gitcd add -A
          if ! gitcd diff-index --quiet HEAD; then
            gitcd commit -m "generated new version ${VERSION}" 
          else
            echo "No changes to commit."
          fi
          gitcd push origin master
          gitcd tag "$TAG"
          gitcd push origin "$TAG"

