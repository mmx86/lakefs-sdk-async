name: Generate new versions.

on:
  workflow_dispatch:

jobs:
  prepare-tags:
    runs-on: ubuntu-latest
    outputs:
      tags-json: ${{ steps.generate-tags.outputs.tags }}
    steps: 
      - name: Generate new versions
        id: generate-tags
        run: |
          set -eux

          # Get new tags.
          LATEST_DONE_TAG=$(git ls-remote --tags https://github.com/mmx86/lakefs-sdk-async.git | sed -n 's#^.*refs/tags/##p' | sed 's/\^{}//' | sort --version-sort | grep "^v" | grep -v "^v0" | tail -n1)
          NEW_TAGS=$(
            git ls-remote --tags https://github.com/treeverse/lakeFS.git \
            | sed -n 's#^.*refs/tags/##p' \
            | sed 's/\^{}//' \
            | sort -u \
            | sort -V \
            | grep "^v" \
            | grep -v "^v0" \
            | awk -v target="$LATEST_DONE_TAG" '$1 == target { found=1; next } found { print }' \
          )

          # Convert newline-separated tags to JSON array
          NEW_TAGS_JSON=$(echo "$NEW_TAGS" | jq -R -s -c 'split("\n") | map(select(. != ""))')

          # Set output
          echo "tags=$NEW_TAGS_JSON" >> $GITHUB_OUTPUT
  test-tags:
    needs: prepare-tags
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJSON(needs.prepare-tags.outputs.tags-json) }}
    steps:
      - name: Print tag
        run: |
          echo "Testing tag: ${{ matrix.tag }}"
      

# NOTE: Better semver sort
# https://stackoverflow.com/a/40391207

#jobs:
#  setup-matrix:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Setup matrix combinations
#        id: setup-matrix-combinations
#        run: |
#          MATRIX_PARAMS_COMBINATIONS='
#              {"foo": "foo-1", "bar": "bar-1"},
#              {"foo": "foo-1", "bar": "bar-2"},
#              {"foo": "foo-2", "bar": "bar-1"},
#          '
#          echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
#    outputs:
#      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}
#  matrix-job:
#    runs-on: ubuntu-latest
#    needs: setup-matrix
#    strategy:
#      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
#    steps:
#      - run: |
#          echo foo=${{ matrix.foo }}
#          echo bar=${{ matrix.bar }}
#
