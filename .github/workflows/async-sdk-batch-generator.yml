name: Generate range of versions

on:
  workflow_dispatch:
    inputs:
      version_from:
        description: 'Version to start from (optional). Starts with new if omitted.'
        required: false
        type: string

jobs:
  generate-async-lakefs-sdk:
    runs-on: ubuntu-latest
    steps: 
      - name: Validate input and set env.
        run: |
          set -eux
          if [ "${{ github.event.inputs.version_from }}" != '' ]; then
            # TODO: validate that version exists.
            VERSION_FROM="${{ github.event.inputs.version_from }}"
          else
            # Get last version, for which generation has been completed and commited to repo.
            VERSION_FROM=$(git ls-remote --tags https://github.com/mmx86/lakefs-sdk-async.git | sed -n 's#^.*refs/tags/##p' | sed 's/\^{}//' | sort --version-sort | grep "^v" | grep -v "^v0" | tail -n1)
          fi
          echo "VERSION_FROM=${VERSION_FROM}" >> $GITHUB_ENV
      - name: Print env.
        run: |
          echo "VERSION_FROM=$VERSION_FROM"

# git tag | sort --version-sort | grep "^v" | grep -v "^v0" | tail -n1
# Better sort
# https://stackoverflow.com/a/40391207

#jobs:
#  log-the-inputs:
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          echo "Log level: $LEVEL"
#          echo "Tags: $TAGS"
#          echo "Environment: $ENVIRONMENT"
#        env:
#          LEVEL: ${{ inputs.logLevel }}
#          TAGS: ${{ inputs.tags }}
#          ENVIRONMENT: ${{ inputs.environment }}

#jobs:
#  setup-matrix:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Setup matrix combinations
#        id: setup-matrix-combinations
#        run: |
#          MATRIX_PARAMS_COMBINATIONS='
#              {"foo": "foo-1", "bar": "bar-1"},
#              {"foo": "foo-1", "bar": "bar-2"},
#              {"foo": "foo-2", "bar": "bar-1"},
#          '
#          echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
#    outputs:
#      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}
#  matrix-job:
#    runs-on: ubuntu-latest
#    needs: setup-matrix
#    strategy:
#      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
#    steps:
#      - run: |
#          echo foo=${{ matrix.foo }}
#          echo bar=${{ matrix.bar }}
#
